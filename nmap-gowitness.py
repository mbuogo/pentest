#!/usr/bin/env python3

import xml.etree.ElementTree as ET
import sys
import datetime
import requests
import subprocess
import os
import shutil
import uuid
import json
from time import strftime


#Variaveis
dic = {}
list_risk_high = ['161','5200','5300','5060','5050','3306','1521','1433','4022','135','1434','5432','50000','27017','8086','6379','7199']
list_risk_medium = ['3389','22','21','1234','4444','23']
hora = strftime("%Y-%m-%dT%H:%M:%S%Z")

#Execucao do NMAP e import do XML
print("[+] Executando o NMAP")
#subprocess.check_output('/docker/kali/kali.cliente '+cliente+' nmap -sSV -Pn -T5 --script=/usr/share/nmap/scripts/firewall-bypass.nse -iL /data/ips.txt -oX /data/temp/nmap.xml || true', shell=True)
subprocess.check_output('sudo nmap -Pn -T5 -sSV '+sys.argv[1]+' -oX nmap.xml || true', shell=True)
tree = ET.parse('nmap.xml')
root = tree.getroot()
#Parse do XML
for i in root.iter('nmaprun'):
    for j in i:
        for host in j:
            if(host.tag == 'address'):
                if(':' not in host.attrib['addr']):
                    dic['ip'] = host.attrib['addr']
                    dic['serveraddress'] = host.attrib['addr']
                    dic['tipo'] = host.attrib['addrtype']
            if(host.tag == 'ports'):
                for port in host:
                    if(port.tag == 'port'):
                        dic['porta'] = port.attrib['portid']
                        if(dic['porta'] in list_risk_high):
                            dic['severity'] = 'High'
                        elif(dic['porta'] in list_risk_medium):
                            dic['severity'] = 'Medium'
                        else:
                            dic['severity'] = 'Low'
                        dic['vul_name'] = 'Accessible port - '+dic['porta']
                        dic['protocolo'] = port.attrib['protocol']
                        for service in port:
                            if(service.tag == 'state'):
                                dic['status'] = service.attrib['state']
                                if( service.attrib['state'] != 'open'):
                                    dic['vul_name'] = 'Enumerable port - '+dic['porta']
                            if(service.tag == 'service'):
                                dic['name'] = service.attrib['name']
                                try:
                                    dic['product'] = service.attrib["product"]
                                except:
                                    dic['product'] = ""
                                try:
                                    dic['version'] = service.attrib["version"]
                                except:
                                    dic['version']  = ""

                        subprocess.check_output('/root/go/bin/gowitness single -F http://'+dic['ip']+':'+dic['porta']+' || true', shell=True)
                        subprocess.check_output('/root/go/bin/gowitness single -F https://'+dic['ip']+':'+dic['porta']+' || true', shell=True)
                        print('\n')
                        print (dic)
